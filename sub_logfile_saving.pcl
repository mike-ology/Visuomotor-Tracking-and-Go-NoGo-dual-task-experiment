# Version 1.1.0

string participant;
int logfile_inc = 1;

if logfile.subject() == "" then
	participant = "NULL 999"
else
	participant = logfile.subject();
end;

string filename; 
output_file log = new output_file;

### CREATE LOGFILE

sub
	create_logfile
begin
	
	loop
		bool log_success
	until
		log_success == true
	begin

		filename = filename_prefix + participant + " phase " + string(phase) + ".txt";

		if use_local_save == "YES" then
			create_directory( local_path );

			if file_exists( local_path + filename ) && !file_exists( logfile_directory + filename ) then
				# show warning
					create_new_prompt( 2 );
					prompt_message.set_caption( "WARNING: A logfile already exists in " + local_path + " for this combination of participant number and phase number.\n\nBy continuing, this file will be overwritten. At the end of the experiment, a copy of this file will be transferred to the default logfile location.", true );
					left_button_text.set_caption( "ESCAPE\nClose program", true );
					right_button_text.set_caption( "SPACE\nAppend logfile", true );
					prompt_trial.present();
					log.open( local_path + filename );
					break
			elseif !file_exists( local_path + filename ) && file_exists( logfile_directory + filename ) then
				# show warning
					create_new_prompt( 2 );
					prompt_message.set_caption( "WARNING: A logfile already exists in the default logfile location for this combination of participant number and phase number.\n\nBy continuing, a separate file will be created with a number appended.", true );
					left_button_text.set_caption( "ESCAPE\nClose program", true );
					right_button_text.set_caption( "SPACE\nAppend logfile", true );
					prompt_trial.present();
					log.open_append( local_path + filename );
					break
			elseif file_exists( local_path + filename ) && file_exists( logfile_directory + filename ) then
				# show warning
					create_new_prompt( 2 );
					prompt_message.set_caption( "WARNING: Logfiles for this combination of participant number and phase number already exist in " + local_path + " and the default logfile location.\n\nBy continuing, the file in " + local_path + " will be overwritten, but a separate file will be created in the default logfile location with a number appended.", true );
					left_button_text.set_caption( "ESCAPE\nClose program", true );
					right_button_text.set_caption( "SPACE\nAppend logfile", true );
					prompt_trial.present();
					log.open_append( local_path + filename );
					break
			else
				log.open( local_path + filename );
				break
			end;

		else
			if file_exists( logfile_directory + filename ) then
				# show warning
					create_new_prompt( 2 );
					prompt_message.set_caption( "WARNING: A logfile already exists for this combination of participant number and phase number.\n\nBy continuing, new data will be appended to the bottom of the existing file.", true );
					left_button_text.set_caption( "ESCAPE\nClose program", true );
					right_button_text.set_caption( "SPACE\nAppend logfile", true );
					prompt_trial.present();
					log.open_append( logfile_directory + filename );
					break
			else
				log.open( filename );
				break
			end;
		end;
		
	end;

end;


### LOCAL FILE >> NETWORK FILE ###

sub
	bool sub_save_to_network( string path, string name, string save )
begin

	if save == "YES" then

		# Create message graphic and present
		
		line_graphic message_box = new line_graphic();
		message_box.set_next_line_color( 0, 255, 0, 255 );
		message_box.set_line_width( 5.0 );
		message_box.set_next_join_type( join_circle );
		message_box.add_line( -300, 100, 300, 100 );
		message_box.line_to( 300, -100 );
		message_box.line_to( -300, -100 );
		message_box.close( false );
		message_box.redraw();

		text saving_text = new text();
		saving_text.set_font_color( 0, 255, 0 );
		saving_text.set_caption( "Saving logfile...", true );

		picture saving_pic = new picture();
		saving_pic.add_part( message_box, 0, 0 );
		saving_pic.add_part( saving_text, 0, 0 );

		saving_pic.present();
		wait_interval( 2000 );

		# Copy local version of logfile to network location

		input_file local_input = new input_file();
		
		if local_input.open( path + name, false ) == false then
			return false;
		else
		end;

		output_file final_output = new output_file();
		
		loop
			bool safe_filename_obtained = false;
			int i = 1;
		until
			safe_filename_obtained == true
		begin
			if file_exists( name ) then
				name = name + "_" + string(i);
			else
				safe_filename_obtained = true;
			end;
			i = i + 1;
		end;
			
		final_output.open_append( name );

		loop
		until
			local_input.end_of_file() == true
		begin
			final_output.print_line( local_input.get_line() );
		end;

		# Update message and present

		saving_text.set_caption( "Logfile saved!", true );

		saving_pic.present();
		wait_interval( 2000 );

	else
		
		# do not perform network save operation
		
	end;

	return true;
end;
