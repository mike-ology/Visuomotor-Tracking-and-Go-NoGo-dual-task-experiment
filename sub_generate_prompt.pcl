# version 1.1.1
	# CHANGES
	# - Main text for message now centred in empty space now occupied by the keyboard prompts (instead of being centred on the screen)

# Get dimensions of current screen and compare to requested dimensions

double prompt_scale_factor = 1.0;
double scale_factor = 1.0;

double x_starting_scale_factor = round( display_device.width() / req_screen_x, 1 );
double y_starting_scale_factor = round( display_device.height() / req_screen_y, 1 );
	
if x_starting_scale_factor  < y_starting_scale_factor then
	prompt_scale_factor = x_starting_scale_factor
else
	prompt_scale_factor = y_starting_scale_factor
end;

# Generate stimuli to be used on prompt screens

picture prompt_pic = new picture();
trial prompt_trial = new trial();
prompt_trial.set_type( specific_response );
prompt_trial.set_terminator_button( 1 );
prompt_trial.set_duration( forever );
prompt_trial.add_stimulus_event( prompt_pic );

box left_box = new box( req_screen_y/5 * prompt_scale_factor, ( req_screen_x / 3.0 ) * prompt_scale_factor ,  rgb_color(0,255,0) );
box mid_box = new box( req_screen_y/5 * prompt_scale_factor, ( req_screen_x / 3.0 ) * prompt_scale_factor ,  rgb_color(0,255,0) );
box right_box = new box( req_screen_y/5 * prompt_scale_factor, ( req_screen_x / 3.0 ) * prompt_scale_factor ,  rgb_color(0,255,0) );

text left_button_text = new text();
text mid_button_text = new text();
text right_button_text = new text();

text prompt_message = new text();
prompt_message.set_max_text_width( display_device.width() - 100 );
prompt_message.set_font_size( 28 );
prompt_message.redraw();

left_button_text.set_background_color( 0, 255, 0, 128 );
left_button_text.set_font_color( 0, 0, 0 );
left_button_text.set_font_size( 48 );
mid_button_text.set_background_color( 0, 255, 0, 128 );
mid_button_text.set_font_color( 0, 0, 0 );
mid_button_text.set_font_size( 48 );
right_button_text.set_background_color( 0, 255, 0, 128 );
right_button_text.set_font_color( 0, 0, 0 );
right_button_text.set_font_size( 48 );

line_graphic button_divider = new line_graphic();
button_divider.add_line( 0, req_screen_y/10 * prompt_scale_factor, 0, -req_screen_y/10 * prompt_scale_factor );
button_divider.set_line_width( 10.0 );
button_divider.set_line_color( 0, 0, 0, 255 );
button_divider.redraw();

############### SUBROUTINE ################

# subroutine that resets prompt template
# 1 = large button
# 2 = two side buttons
# 3 = three buttons

sub create_new_prompt( int variant )
begin

	prompt_pic.clear();
	
	prompt_pic.add_part( prompt_message, 0, 0 + (req_screen_y/10) );
	
	left_button_text.set_caption( "BACK", true );
	mid_button_text.set_caption( "OK", true );
	right_button_text.set_caption( "NEXT", true );

	if variant == 3 then
		prompt_pic.add_part( left_box, ( -req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.add_part( mid_box, 0, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.add_part( right_box, ( req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;

		prompt_pic.add_part( left_button_text, ( -req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.add_part( mid_button_text, 0.0, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.add_part( right_button_text, ( req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.set_part_on_top( 5, true );
		prompt_pic.set_part_on_top( 6, true );
		prompt_pic.set_part_on_top( 7, true );
		prompt_pic.add_part( button_divider, ( -req_screen_x / 2.0 ) * ( 1.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.add_part( button_divider, ( req_screen_x / 2.0 ) * ( 1.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		
	elseif variant == 2 then
		prompt_pic.add_part( left_box, ( -req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.add_part( right_box, ( req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;

		prompt_pic.add_part( left_button_text, ( -req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.add_part( right_button_text, ( req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.set_part_on_top( 4, true );
		prompt_pic.set_part_on_top( 5, true );

		prompt_trial.set_terminator_buttons (  { 1 } );

	elseif variant == 1 then
		prompt_pic.add_part( left_box, ( -req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.add_part( mid_box, 0, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.add_part( right_box, ( req_screen_x / 2.0 ) * ( 2.0 / 3.0 ) * prompt_scale_factor, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;

		prompt_pic.add_part( mid_button_text, 0.0, ( -req_screen_y / 2.0 ) * ( 4.0 / 5.0 ) * prompt_scale_factor ) ;
		prompt_pic.set_part_on_top( 5, true );

		prompt_trial.set_terminator_buttons (  { 1 } );

	end;
end;
